<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"

	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd

            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

<!--  -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		
		<property name="testOnBorrow" value="true"/>
		<property name="validationQuery" value="select 1"/>
		
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<property name="defaultAutoCommit" value="true"/>
	</bean>	
	
	

	
	<!-- 1、扫描所有包 -->
	<context:component-scan base-package="com.seegeek.cms" />
	<!--2 创建session 工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>  
    </bean>  
    <!-- 配置SQLSession模板 -->  
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>  
	
	<bean id="sjdbcTemplate"
		class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>
	<bean id="sjdbcCall"
		class="org.springframework.jdbc.core.simple.SimpleJdbcCall">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>

	 
  
	<!--3 创建事物管理器  -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
    </bean>
	
	<!-- 4 对事务进行处理的注解驱动 -->
   <tx:annotation-driven transaction-manager="transactionManager"/>
   
   
   <!--5 配置AOP切面 -->  
    <aop:config>  
        <aop:pointcut id="transactionPointcut" expression="execution(* com.seegeek..service.*.*(..))"/>  
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>  
    </aop:config>  
       <!-- 使用annotation注解方式配置事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />  
    
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="batch*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true"/>  
            <tx:method name="query*" read-only="true"/>  
            <tx:method name="find*" read-only="true"/>  
            <tx:method name="load*" read-only="true"/>  
		</tx:attributes>
	</tx:advice>
	
	   <!-- 对静态资源文件的访问 支持访问WEB-INF目录 -->  

	<bean id="contextUtils" class="com.seegeek.cms.utils.ContextUtils" scope="singleton" />
	
	
 	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
       	<property name="maxIdle" value="100"/> 
        <property name="testOnBorrow" value="true"/> 
    </bean> 
<bean id = "jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
  <property name="hostName" value="${redis.host}"/>
  <property name="port" value="${redis.port}"/>
  <property name="poolConfig"  ref="jedisPoolConfig" />
  </bean>
	
	<bean id = "redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
      <property name="connectionFactory" ref="jedisConnectionFactory"/>
      <property name="keySerializer">
         <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
      </property>
   </bean>
   
   
   <bean id = "messageStorage" class="com.seegeek.cms.redis.MessageStorage">
       <property name="redisTemplate" ref="redisTemplate"/>
    </bean>
	
	
	
	
	  <bean id="processEngineConfiguration"
    class="org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration">
    <property name="dataSource" ref="dataSource" />
    <property name="databaseType" value="mysql"/>
    <property name="databaseSchemaUpdate" value="true" />
    <property name="jobExecutorActivate" value="false" />
  </bean>
  
  <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
    <property name="processEngineConfiguration" ref="processEngineConfiguration" />
  </bean>
  
  <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
  <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
  <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
  <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
  <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
  
	
</beans>